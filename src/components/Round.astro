---
import Button from './ui/Button.astro';

export interface Props {
  title: string;
  date: string;
  introSentence: string;
  qualification?: string;
  link?: {
    url: string;
    text: string;
  };
  t: {
    howItWorks: {
      labels: {
        qualification: string;
        tbd: string;
        starts: string;
      };
    };
  };
}

const { title, date, introSentence, qualification, link, t } = Astro.props;
---

<details class="round-card">
  <summary class="round-header">
    <div class="round-title-wrapper">
      <h4 class="round-title">{title}</h4>
      <span class="round-date">{date && date.trim() ? date : t.howItWorks.labels.tbd}</span>
    </div>
    <p class="round-intro text-base">{introSentence}</p>
    <span class="expand-icon" aria-hidden="true"></span>
  </summary>

  <div class="round-content">
    <slot />

    {qualification && (
      <div class="qualification">
        <strong>{t.howItWorks.labels.qualification}:</strong> {qualification}
      </div>
    )}

    {link && (
      <div class="round-link">
        <Button variant="primary" size="small" href={link.url}>
          {link.text}
        </Button>
      </div>
    )}
  </div>
</details>

<style>
  .round-card {
    border-bottom: 1px dashed var(--border-primary);
    overflow: hidden;
    transition: all 0.2s ease;
  }

  .round-card:last-child {
    border-bottom: none;
  }

 

  .round-header {
    padding-block: var(--space-m);
    cursor: pointer;
    list-style: none;
    position: relative;
    transition: background-color 0.2s ease;
  }


  .round-header::-webkit-details-marker {
    display: none;
  }

  .round-title-wrapper {
    /* display: flex; */
    justify-content: space-between;
    align-items: center;
    margin-bottom: var(--space-xs);
  }

  .round-date {
    font-size: var(--font-size-14);
    color: var(--text-secondary);
    font-weight: var(--font-weight-medium);
  }

  .round-intro {
    margin: 0;
    color: var(--text-secondary);
    max-width: 720px;
    padding-right: var(--space-l);
  }

  .expand-icon {
    position: absolute;
    right: var(--space-m);
    top: 50%;
    transform: translateY(-50%);
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .expand-icon::before {
    content: '+';
    font-size: 20px;
    font-weight: 300;
    color: var(--text-secondary);
    transition: all 0.2s ease;
    line-height: 1;
  }

  details[open] .expand-icon::before {
    content: 'Ã—';
    font-size: 24px;
    color: var(--color-primary);
  }

  .round-content {
    padding: 0 var(--card-inline) var(--card-block) 0;
    
  }

  .round-content :global(h2) {
    font-size: var(--font-size-base);
    font-weight: var(--font-weight-medium);
    color: var(--text-primary);
    margin-bottom: var(--space-xs);
  }

  .round-content :global(p) {
    font-size: var(--font-size-base);
    line-height: var(--line-height-relaxed);
    color: var(--text-secondary);
  }

  .round-content :global(ul) {
    margin: var(--space-xs) 0;
    padding-left: var(--space-m);
    color: var(--text-secondary);
  }

  .round-content :global(li) {
    margin: var(--space-3xs) 0;
    line-height: var(--line-height-relaxed);
  }

  .qualification {
    margin-top: var(--space-m);
    padding: var(--space-s);
    background: rgba(0, 102, 204, 0.1);
    border-radius: var(--radius-sm);
    font-size: var(--font-size-14);
    color: var(--color-primary);
  }

  .qualification strong {
    font-weight: var(--font-weight-medium);
  }

  .round-link {
    margin-top: var(--space-m);
    display: flex;
    align-items: center;
  }

  @media (max-width: 768px) {
    /* .round-header {
      padding: var(--card-block);
    } */

    .round-title {
      font-size: var(--font-size-base);
    }

    .round-intro {
      padding-right: 0;
    }

    .round-content {
      padding: var(--card-block) 0 var(--card-block) 0;
    }

    .expand-icon {
      top: var(--space-xl);
      right: var(--card-inline);
    }
  }
</style>